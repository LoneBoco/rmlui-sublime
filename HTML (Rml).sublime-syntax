%YAML 1.2
---

name: HTML (Rml)
file_extensions:
  - rml
scope: embedding.rml
extends: Packages/HTML/HTML.sublime-syntax
version: 2

contexts:

  script-lua-content:
    - meta_include_prototype: false
    - match: '{{script_content_begin}}'
      captures:
        1: comment.block.rml punctuation.definition.common.begin.rml
      pop: 1
      embed: scope:source.lua
      embed_scope: source.lua.embedded.html
      escape: '{{script_content_end}}'
      escape_captures:
        1: source.lua.embedded.html
        2: comment.block.html punctuation.definition.comment.end.html
        3: source.lua.embedded.html
        4: comment.block.html punctuation.definition.comment.end.html

  # Overwritten to support <rml>
  tag-html:
    - meta_prepend: true
    - match: (</?)((?i:rml){{tag_name_break}})
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.structure.any.rml
      push:
        - meta_scope: meta.tag.structure.any.html
        - include: tag-end
        - include: tag-attributes

  # Overwritten to call script-lua-content to embed source.lua.
  script-javascript:
    - meta_scope: meta.tag.script.begin.html
    - include: script-common
    - match: '>'
      scope: punctuation.definition.tag.end.html
      set: script-lua-content

  # Overwritten to embed source.lua.
  tag-event-attribute-value:
    - match: \"
      scope: meta.string.html string.quoted.double.html punctuation.definition.string.begin.html
      embed: scope:source.lua
      embed_scope: meta.string.html meta.interpolation.html source.lua.embedded.html
      escape: \"
      escape_captures:
        0: meta.string.html string.quoted.double.html punctuation.definition.string.end.html
    - match: \'
      scope: meta.string.html string.quoted.single.html punctuation.definition.string.begin.html
      embed: scope:source.lua
      embed_scope: meta.string.html meta.interpolation.html source.lua.embedded.html
      escape: \'
      escape_captures:
        0: meta.string.html string.quoted.single.html punctuation.definition.string.end.html
    - include: else-pop

  # Overwritten to embed embedding.rcss.
  style-css-content:
    - meta_include_prototype: false
    - match: \s*((<!\[)(CDATA)(\[))
      captures:
        1: meta.tag.sgml.cdata.html
        2: punctuation.definition.tag.begin.html
        3: keyword.declaration.cdata.html
        4: punctuation.definition.tag.begin.html
      pop: 1  # make sure to match only once
      embed: scope:embedding.rcss
      embed_scope: meta.tag.sgml.cdata.html source.rcss.embedded.html
      escape: \]\]>
      escape_captures:
        0: meta.tag.sgml.cdata.html punctuation.definition.tag.end.html
    - match: '{{style_content_begin}}'
      captures:
        1: comment.block.html punctuation.definition.comment.begin.html
      pop: 1  # make sure to match only once
      embed: scope:embedding.rcss
      embed_scope: source.rcss.embedded.html
      escape: '{{style_content_end}}'
      escape_captures:
        1: source.rcss.embedded.html
        2: comment.block.html punctuation.definition.comment.end.html
        3: source.rcss.embedded.html
        4: comment.block.html punctuation.definition.comment.end.html

  # Overwritten to embed embedding.rcss.
  tag-style-attribute-value:
    - match: \"
      scope: meta.string.html string.quoted.double.html punctuation.definition.string.begin.html
      embed: scope:embedding.rcss#rule-list-body
      embed_scope: meta.string.html meta.interpolation.html source.rcss.embedded.html
      escape: \"
      escape_captures:
        0: meta.string.html string.quoted.double.html punctuation.definition.string.end.html
    - match: \'
      scope: meta.string.html string.quoted.single.html punctuation.definition.string.begin.html
      embed: scope:embedding.rcss#rule-list-body
      embed_scope: meta.string.html meta.interpolation.html source.rcss.embedded.html
      escape: \'
      escape_captures:
        0: meta.string.html string.quoted.single.html punctuation.definition.string.end.html
    - include: else-pop
